/**
 * This file is auto-generated by scripts/generate-subjects.ts
 * Do not edit this file manually
 */

import type {
  AddressLike,
  BytesLike,
  ContractIdLike,
  AssetId as FuelAssetId,
  Block as FuelsBlock,
  Input as FuelsInput,
  ReceiptLog as FuelsLog,
  Output as FuelsOutput,
  Receipt as FuelsReceipt,
  Transaction as FuelsTransaction,
  UtxoId,
} from 'fuels';

export type Bytes32 = BytesLike;
export type Address = AddressLike;
export type AssetId = FuelAssetId;
export type ContractId = ContractIdLike;
export type BlockHeight = number;
export type MessageId = string;

export enum IdentifierKind {
  AssetID = 'asset_id',
  ContractID = 'contract_id',
}

export enum TransactionKind {
  Create = 'create',
  Mint = 'mint',
  Script = 'script',
  Upgrade = 'ugrade',
  Upload = 'upload',
  Blob = 'blob',
}

export enum TransactionStatus {
  Failed = 'failed',
  Submitted = 'submitted',
  SqueezedOut = 'squeezedOut',
  Success = 'success',
  None = 'none',
}

export enum StreamNames {
  Blocks = 'blocks',
  Inputs = 'inputs',
  Outputs = 'outputs',
  Receipts = 'receipts',
  Transactions = 'transactions',
  Logs = 'logs',
  Utxos = 'utxos',
}

export enum ClientStatus {
  Connected = 'connected',
  Disconnected = 'disconnected',
  Reconnecting = 'reconnecting',
  Disconnecting = 'disconnecting',
  Errored = 'errored',
  Stale = 'stale',
}

export type Block = FuelsBlock;
export type Transaction = FuelsTransaction;
export type Input = FuelsInput;
export type Output = FuelsOutput;
export type Receipt = FuelsReceipt;
export type Log = FuelsLog;

export enum UtxoType {
  Contract = 'Contract',
  Coin = 'Coin',
  Message = 'Message',
}

export type Utxo = {
  id: UtxoId;
  sender?: Address;
  recipient?: Address;
  nonce?: string;
  data?: Uint8Array;
  amount?: bigint;
  txId: Bytes32;
};
